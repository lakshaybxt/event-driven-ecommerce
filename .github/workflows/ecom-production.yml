name: ecom-production.yml
on:
  push:
    branches:
      - main

jobs:
  ecommerce-microservices:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [ eureka-server, user-service, product-service, cart-service, order-service, payment-service ]
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: 21
          distribution: 'temurin'

      - name: Build Project - ${{ matrix.service }}
        run: |
          cd ecommerce-microservices/${{ matrix.service }}
          mvn clean package -DskwipTests

      - name: Start DB - ${{ matrix.service }}
        run: |
          cd ecommerce-microservices/${{ matrix.service }}
          if [ -f docker-compose.yml ]; then
          docker compose up -d
          sleep 10
          else
          echo "No docker-compose.yml found, skipping DB."
          fi

      - name: Run Tests - ${{ matrix.service }}
        run: |
          cd ecommerce-microservices/${{ matrix.service }}
          mvn test

      - name: Build Docker Image - ${{ matrix.service }}
        run: |
          cd ecommerce-microservices/${{ matrix.service }}
          docker build -t ${{ matrix.service }}:1.0.0 .
          docker tag ${{ matrix.service }}:1.0.0 lakshaybxt/${{ matrix.service }}:1.0.0

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Image
        run: docker push lakshaybxt/${{ matrix.service }}:1.0.0

#      - name: Deploy on EC2
#        uses: appleboy/ssh-action@v1.0.0
#        with:
#          host: ${{ secrets.EC2_HOST }}
#          username: ${{ secrets.EC2_USERNAME }}
#          key: ${{ secrets.EC2_SSH_KEY }}
#        script: |
#            docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
#            docker pull lakshaybxt/${{ matrix.service }}:1.0.0
#            docker stop my-service || true
#            docker rm my-service || true
#            docker run -d -p 8080:8080 --name ${{ matrix.service }} --rm lakshaybxt/${{ matrix.service }}:1.0.0